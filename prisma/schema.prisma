generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  name String
  surname String?
  
  accessTokens    AccessToken[]
  emailProviders EmailProvider[]
  favorites Favorite[]
  items Item[]
}

model AccessToken{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  token       String @unique
  expiresIn   DateTime 

  userId String
  user User @relation(fields: [userId],references: [id])
}

model EmailProvider{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  email         String
  passwordhash  String

  userId String
  user User @relation(fields: [userId],references: [id])
}


model Favorite{  
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())

  userId String
  user User @relation(fields: [userId],references: [id])

  itemId String
  item Item @relation(fields: [itemId],references: [id])
}


model TempFavoriteList{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  tempFavorites TempFavorite[]
}

model TempFavorite{  
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())

  tempFavoriteListId String
  tempFavoriteList TempFavoriteList @relation(fields: [tempFavoriteListId],references: [id])

  itemId String
  item Item @relation(fields: [itemId],references: [id])
}


model Item{
  id        String @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()
  
  lable String
  price Int

  imageId String?
  image Image? @relation(fields: [imageId],references: [id])

  userId String?
  user User? @relation(fields: [userId],references: [id])

  favorites Favorite[]
  tempFavorites TempFavorite[]
}

model Image{
  id String @id @unique @default(uuid())

  createAt DateTime @default(now())

  type String
  size Int
  buffer Bytes

  items Item[]
}
